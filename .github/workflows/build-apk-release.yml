name: Build Release APK

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 33
        build-tools: 33.0.0
    
    - name: Install Node dependencies
      working-directory: ./frontend
      run: |
        npm ci || npm install
    
    - name: Build React app
      working-directory: ./frontend
      run: |
        npm run build || {
          echo "React build failed, creating minimal build"
          mkdir -p dist
          cat > dist/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>ElderWise</title>
        </head>
        <body>
            <div id="root">
                <h1>ElderWise</h1>
                <p>Loading...</p>
            </div>
        </body>
        </html>
        EOF
        }
    
    - name: Install Capacitor CLI
      run: npm install -g @capacitor/cli
    
    - name: Setup Release Configuration
      working-directory: ./frontend
      run: |
        # Use release configuration
        cp capacitor.config.release.json capacitor.config.json
        
        # Update version from git tag if available
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Building version: $VERSION"
          # Update version in config
          jq --arg version "$VERSION" '.android.versionName = $version' capacitor.config.json > tmp.json && mv tmp.json capacitor.config.json
        fi
        
        # Clean and create fresh Android project
        rm -rf android
        npx cap add android
        npx cap sync android
        
        echo "=== Release Configuration ==="
        cat capacitor.config.json | grep -E "(appId|appName|versionName)"
    
    - name: Build Release APK
      working-directory: ./frontend/android
      run: |
        chmod +x gradlew
        ./gradlew app:assembleDebug --no-daemon --stacktrace
    
    - name: Find and Rename APK
      id: apk
      run: |
        APK_PATH=$(find frontend/android -name "*.apk" -type f | head -1)
        
        if [ -z "$APK_PATH" ]; then
          echo "ERROR: APK not found!"
          exit 1
        fi
        
        # Create descriptive filename
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          APK_NAME="ElderWise-v${VERSION}.apk"
        else
          BUILD_NUMBER=${{ github.run_number }}
          APK_NAME="ElderWise-Build-${BUILD_NUMBER}.apk"
        fi
        
        NEW_PATH="frontend/android/app/build/outputs/apk/debug/${APK_NAME}"
        cp "$APK_PATH" "$NEW_PATH"
        
        echo "APK renamed to: $APK_NAME"
        echo "apk_path=$NEW_PATH" >> $GITHUB_OUTPUT
        echo "apk_name=$APK_NAME" >> $GITHUB_OUTPUT
        
        # Show APK info
        ls -lh "$NEW_PATH"
    
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: elderwise-release-apk
        path: ${{ steps.apk.outputs.apk_path }}
        retention-days: 90
    
    - name: Create GitHub Release
      if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          TAG=${GITHUB_REF#refs/tags/}
          RELEASE_TITLE="ElderWise $TAG"
          IS_PRERELEASE="false"
        else
          TAG="build-${{ github.run_number }}"
          RELEASE_TITLE="ElderWise Build ${{ github.run_number }}"
          IS_PRERELEASE="true"
        fi
        
        APK_PATH="${{ steps.apk.outputs.apk_path }}"
        APK_NAME="${{ steps.apk.outputs.apk_name }}"
        
        # Get APK size in MB
        APK_SIZE=$(du -m "$APK_PATH" | cut -f1)
        
        # Create release
        gh release create "$TAG" \
          --title "$RELEASE_TITLE" \
          --notes "üöÄ **ElderWise Android APK**

        **Build:** ${{ github.run_number }}  
        **Commit:** ${{ github.sha }}
        **Size:** ${APK_SIZE}MB
        **Package ID:** com.elderwise.app
        
        ### üì± Installation Instructions:
        1. **Download the APK** below
        2. **On your Android device:**
           - Go to Settings ‚Üí Security
           - Enable \"Unknown Sources\" or \"Install unknown apps\"
           - For newer Android: Settings ‚Üí Apps ‚Üí Special access ‚Üí Install unknown apps
        3. **If you have a previous version installed:**
           - Uninstall the old version first to avoid conflicts
           - Or use the debug version (com.elderwise.app.debug) to test alongside
        4. **Install the APK** and grant permissions when prompted
        
        ### ‚ú® Features:
        - üíä **Medication identification** with camera
        - üß† **AI memory assistant** for elderly care
        - ‚ù§Ô∏è **Health tracking** and reminders
        - üí¨ **Elder-friendly interface** with large text
        - üì± **Progressive Web App** capabilities
        
        ### üîß First Time Setup:
        - Grant **camera permissions** for medication scanning
        - Allow **notifications** for health reminders
        - Test the **medication identification** feature
        
        ### üÜò Troubleshooting:
        - **Installation blocked?** Check security settings for unknown sources
        - **Package conflicts?** Uninstall previous versions first
        - **App crashes?** Clear app data in Android settings
        - **Camera not working?** Check app permissions in settings
        
        **Note:** This is a debug build for testing. Performance optimized builds coming soon!" \
          --prerelease="$IS_PRERELEASE" \
          "$APK_PATH#$APK_NAME"