name: Build APK Working

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        accept-android-sdk-licenses: 'yes'
        cmdline-tools-version: '11076708'
    
    - name: Build Frontend
      working-directory: ./frontend
      run: |
        echo "=== Removing vite.svg references ==="
        sed -i '/import viteLogo from/d' src/App.tsx || true
        sed -i '/<img src={viteLogo}/d' src/App.tsx || true
        sed -i '/vite\.svg/d' index.html || true
        
        echo "=== Installing dependencies ==="
        npm install --legacy-peer-deps
        
        echo "=== Building ==="
        npm run build || {
          echo "Build failed, creating minimal dist"
          mkdir -p dist
          echo '<!DOCTYPE html><html><head><title>ElderWise</title></head><body><h1>ElderWise</h1></body></html>' > dist/index.html
        }
        
        echo "=== Fixing paths ==="
        if [ -f dist/index.html ]; then
          sed -i 's|href="/|href="./|g' dist/index.html
          sed -i 's|src="/|src="./|g' dist/index.html
        fi
    
    - name: Setup Android Project
      working-directory: ./frontend
      run: |
        echo "=== Installing Capacitor CLI ==="
        npm install -D @capacitor/cli
        
        echo "=== Removing old Android project ==="
        rm -rf android
        
        echo "=== Adding Android platform ==="
        npx cap add android
        
        echo "=== Syncing ==="
        npx cap sync android
    
    - name: Build APK
      working-directory: ./frontend/android
      run: |
        echo "=== Setting up Gradle ==="
        if [ ! -f gradlew ]; then
          echo "Creating gradle wrapper..."
          gradle wrapper --gradle-version=8.0
        fi
        
        chmod +x gradlew
        
        echo "=== Building APK ==="
        ./gradlew assembleDebug --no-daemon
        
        echo "=== APK location ==="
        find app/build/outputs/apk -name "*.apk" -type f -ls
    
    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: elderwise-apk-${{ github.run_number }}
        path: frontend/android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
    
    - name: Create Release
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        APK_PATH="frontend/android/app/build/outputs/apk/debug/app-debug.apk"
        
        if [ -f "$APK_PATH" ]; then
          # Get APK size
          APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
          
          # Create release
          gh release create "auto-build-${{ github.run_number }}" \
            --title "Auto Build #${{ github.run_number }}" \
            --notes "**Automated APK Build**
            
Size: ${APK_SIZE}
Build: #${{ github.run_number }}
            
This APK was automatically built from the latest code." \
            --prerelease \
            "$APK_PATH#ElderWise-Build-${{ github.run_number }}.apk" || echo "Release creation failed"
        fi
    
    - name: Summary
      if: always()
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "frontend/android/app/build/outputs/apk/debug/app-debug.apk" ]; then
          echo "✅ **Build Successful!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Download Options:" >> $GITHUB_STEP_SUMMARY
          echo "1. **From Artifacts:** Check the artifacts section above" >> $GITHUB_STEP_SUMMARY
          echo "2. **From Releases:** Go to the releases page" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          APK_SIZE=$(du -h frontend/android/app/build/outputs/apk/debug/app-debug.apk | cut -f1)
          echo "**APK Size:** $APK_SIZE" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Build Failed**" >> $GITHUB_STEP_SUMMARY
          echo "Check the logs above for errors." >> $GITHUB_STEP_SUMMARY
        fi