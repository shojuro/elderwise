name: Build Android APK (Legacy)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 33
        build-tools: 33.0.0
    
    - name: Install Node dependencies
      working-directory: ./frontend
      run: |
        npm ci || npm install
    
    - name: Build React app
      working-directory: ./frontend
      run: |
        npm run build || {
          echo "React build failed, creating minimal build"
          mkdir -p dist
          cat > dist/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>ElderWise</title>
        </head>
        <body>
            <div id="root">
                <h1>ElderWise</h1>
                <p>Loading...</p>
            </div>
        </body>
        </html>
        EOF
        }
    
    - name: Install Capacitor CLI
      run: npm install -g @capacitor/cli
    
    - name: Initialize Capacitor Android
      working-directory: ./frontend
      run: |
        # Clean start
        rm -rf android
        
        # Add Android platform
        echo "Adding Android platform..."
        npx cap add android
        
        # Sync Capacitor
        echo "Syncing Capacitor..."
        npx cap sync android
        
        # Verify Android project structure
        echo "=== Android project structure ==="
        ls -la android/
        echo "=== App directory ==="
        ls -la android/app/
        echo "=== Gradle files ==="
        find android/ -name "*.gradle" -type f
    
    - name: Check and fix Gradle tasks
      working-directory: ./frontend/android
      run: |
        echo "=== Available Gradle tasks ==="
        chmod +x gradlew || gradle wrapper && chmod +x gradlew
        ./gradlew tasks --all
        
        echo "=== Checking for app module ==="
        if [ ! -d "app" ]; then
          echo "ERROR: app directory not found!"
          ls -la
          exit 1
        fi
        
        echo "=== App build.gradle content ==="
        if [ -f "app/build.gradle" ]; then
          cat app/build.gradle
        else
          echo "ERROR: app/build.gradle not found!"
          exit 1
        fi
    
    - name: Build APK
      working-directory: ./frontend/android
      run: |
        echo "Building APK with full path..."
        ./gradlew app:assembleDebug --no-daemon --stacktrace || {
          echo "Trying alternative build command..."
          ./gradlew :app:assembleDebug --no-daemon --stacktrace
        }
    
    - name: Find APK
      id: apk
      run: |
        echo "Searching for APK files..."
        find frontend/ -name "*.apk" -type f
        
        APK_PATH=$(find frontend/android -name "*.apk" -type f | head -1)
        
        if [ -z "$APK_PATH" ]; then
          echo "ERROR: APK not found!"
          echo "=== Checking build outputs ==="
          find frontend/android -name "outputs" -type d
          find frontend/android -path "*/build/*" -name "*.apk" -type f
          exit 1
        fi
        
        echo "APK found at: $APK_PATH"
        echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
    
    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: elderwise-apk
        path: ${{ steps.apk.outputs.apk_path }}
        retention-days: 30
    
    - name: Create Release
      if: github.ref == 'refs/heads/master'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG="build-${{ github.run_number }}"
        APK_PATH="${{ steps.apk.outputs.apk_path }}"
        
        # Create release
        gh release create "$TAG" \
          --title "ElderWise APK Build ${{ github.run_number }}" \
          --notes "🚀 **ElderWise Android APK**

        **Build:** ${{ github.run_number }}  
        **Commit:** ${{ github.sha }}
        
        ### 📱 Install Instructions:
        1. Download the APK below
        2. Enable \"Unknown Sources\" in Android settings
        3. Install the APK
        4. Grant camera permissions for medication scanning
        
        ### ✨ Features:
        - 💊 Medication identification with camera
        - 🧠 AI memory assistant
        - ❤️ Health tracking
        - 💬 Elder-friendly interface
        
        **Note:** Debug build for testing only." \
          --prerelease \
          "$APK_PATH"